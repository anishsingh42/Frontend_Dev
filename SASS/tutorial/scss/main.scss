// sass has variables it puts the actual value inplace of the variable name in css therefore highly compatible compared to css
$primary-color: #272727;
$accent-color: #ff652f;
$text-color: #fff;
// We have maps in SASS
//refer the variables.scss file
@import './variables';


//partials are files that are imported by the sass
// they are name with _NAMEOFFILE.scss
//going to import the resets and can also import the variables 
@import './resets';

//we have functions in sass similar to js 
@function weights($weight-name){
    @return map-get($font-weights,$weight-name);
}

//mixin is similar to functions but they are used to replace a part of code that is being repeated whereas functions are used to return a value

@mixin flexCenter {
    display: flex;
    justify-content: center;    
}

@mixin flexDirection($flexDirection) {
    flex-direction: $flexDirection;
}

// using mixin to change light theme and dark theme
@mixin lightTheme ($light-theme : true){
    @if $light-theme{
        background-color: lighten($primary-color, 100%);
        color: darken($text-color, 100%);

        .main{
            background-color: lightcoral;

            .main-paragraph{
                background-color: lightcoral;
            }
        }
    }
}
body{
    background-color: $primary-color;
    color: $text-color;
}
h1{
    text-align: center;
}
p{
    font-weight:map-get($font-weights , bold) ;
}

.main{
    @include flexCenter();
    @include flexDirection(row);
    width: 80%;
    max-width: 980px;
    background-color: $accent-color;
    margin: 0 auto;

    p:last-child{
        font-weight:weights(medium);
    }

    #{&}-paragraph{
        width: 40%+30%;
        //in css it would have been using calc ;
        // width : calc(40% + 30%);
        //in sass we cant perform operations of different types whereas in css it was possible 
        margin: 0 auto;
        background-color: $primary-color;

        &:hover{
            color: hotpink;
        }
    }
    // #{&}-paragraph:hover{
    //     color: pink;
    // }


    .secondary-paragraph{
        @extend .main-paragraph;

        &:hover{
            color: turquoise;
        }
    }
}

.light{
    @include lightTheme($light-theme : false);
}